syntax = "proto3";

option go_package = "github.com/Yostardev/devops-sdk/artifacts/v1; artifact";

package artifact;

import "devops-sdk/general/paginate.proto";
import "devops-sdk/general/gpp_info.proto";
import "devops-sdk/general/request_id.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service BinaryService {
  rpc List(BinaryListRequest) returns (BinaryListResponse) {}
  rpc Create(BinaryCreateRequest) returns (BinaryResponse) {}
  rpc GetObjectMeta(BinaryObjectMetaRequest) returns (BinaryObjectMetaResponse) {}
  rpc DownloadFile(BinaryDownloadRequest) returns (stream BinaryDownloadResponse) {}
  rpc DeleteCollection(BinaryObjectDeleteRequest) returns (google.protobuf.Empty) {}
}

message BinaryListRequest {
  // @gotags: validate:"required"
  general.GppInfo GppInfo = 1;
  // @gotags: validate:"required"
  general.PaginateQuery PaginateQuery = 2;
  // @gotags: validate:"required"
  general.RequestID RequestID = 3;
}


message BinaryResponse {
  // @gotags: json:"created_at"
  google.protobuf.Timestamp CreatedAt = 1;
  // @gotags: json:"updated_at"
  google.protobuf.Timestamp UpdatedAt = 2;
  // @gotags: json:"id"
  int64 ID = 3;
  // @gotags: json:"name"
  string Name = 4;
  // @gotags: json:"repositories_id"
  int64 RepositoriesID = 5;
  // @gotags: json:"branch"
  string Branch = 6;
  // @gotags: json:"relative_path"
  string RelativePath = 7;
}

message BinaryListResponse {
  // @gotags: json:"paginate"
  general.PaginateInfo Paginate = 1;
  // @gotags: json:"items"
  repeated BinaryResponse Items = 2;
}

message BinaryRequest {
  // @gotags: json:"name" validate:"required"
  string Name = 1;
  // @gotags: json:"branch" validate:"required"
  string Branch = 2;
  // @gotags: json:"repositories_name" validate:"required"
  string RepositoriesName = 4;
}

message BinaryCreateRequest {
  // @gotags: validate:"required"
  general.GppInfo GppInfo = 1;
  // @gotags: validate:"required"
  general.RequestID RequestID = 2;
  // @gotags: validate:"required"
  BinaryRequest Request = 3;
}

message BinaryDownloadRequest {
  // @gotags: validate:"required"
  general.GppInfo GppInfo = 1;
  // @gotags: validate:"required"
  general.RequestID RequestID = 2;
  // @gotags: validate:"required"
  int64 ID = 3;
}

message BinaryDownloadResponse {
  // @gotags: json:"data"
  bytes Data = 1;
}

message BinaryObjectMetaRequest {
  // @gotags: validate:"required"
  int64 ID = 1;
  // @gotags: validate:"required"
  general.GppInfo GppInfo = 2;
  // @gotags: validate:"required"
  general.RequestID RequestID = 3;
}

message BinaryObjectMetaResponse {
  // @gotags: json:"HTTPHeaderContentLength"
  string HTTPHeaderContentLength = 1;
  // @gotags: json:"file_name"
  string FileName = 2;
}

message BinaryObjectDeleteRequest {
  // @gotags: validate:"required"
  general.RequestID RequestID = 1;
  // @gotags: json:"branch" validate:"required,oneof=dev test"
  string Branch =3;
}
