// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: artifact/v1/image.proto

package artifact

import (
	general "github.com/Yostardev/devops-sdk/general"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	GppInfo *general.GppInfo `protobuf:"bytes,1,opt,name=GppInfo,proto3" json:"GppInfo,omitempty" validate:"required"`
	// @gotags: validate:"required"
	PaginateQuery *general.PaginateQuery `protobuf:"bytes,2,opt,name=PaginateQuery,proto3" json:"PaginateQuery,omitempty" validate:"required"`
	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,3,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
}

func (x *ImageListRequest) Reset() {
	*x = ImageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageListRequest) ProtoMessage() {}

func (x *ImageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageListRequest.ProtoReflect.Descriptor instead.
func (*ImageListRequest) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{0}
}

func (x *ImageListRequest) GetGppInfo() *general.GppInfo {
	if x != nil {
		return x.GppInfo
	}
	return nil
}

func (x *ImageListRequest) GetPaginateQuery() *general.PaginateQuery {
	if x != nil {
		return x.PaginateQuery
	}
	return nil
}

func (x *ImageListRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

type ImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"created_at"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=CreatedAt,proto3" json:"created_at"`
	// @gotags: json:"updated_at"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=UpdatedAt,proto3" json:"updated_at"`
	// @gotags: json:"id"
	ID int64 `protobuf:"varint,3,opt,name=ID,proto3" json:"id"`
	// @gotags: json:"name"
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"name"`
	// @gotags: json:"repositories_id"
	RepositoriesID int64 `protobuf:"varint,5,opt,name=RepositoriesID,proto3" json:"repositories_id"`
	// @gotags: json:"branch"
	Branch string `protobuf:"bytes,6,opt,name=Branch,proto3" json:"branch"`
	// @gotags: json:"address"
	Address string `protobuf:"bytes,7,opt,name=Address,proto3" json:"address"`
	// @gotags: json:"tag"
	Tag string `protobuf:"bytes,8,opt,name=Tag,proto3" json:"tag"`
}

func (x *ImageResponse) Reset() {
	*x = ImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageResponse) ProtoMessage() {}

func (x *ImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageResponse.ProtoReflect.Descriptor instead.
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ImageResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ImageResponse) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ImageResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageResponse) GetRepositoriesID() int64 {
	if x != nil {
		return x.RepositoriesID
	}
	return 0
}

func (x *ImageResponse) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ImageResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ImageResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ImageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"paginate"
	Paginate *general.PaginateInfo `protobuf:"bytes,1,opt,name=Paginate,proto3" json:"paginate"`
	// @gotags: json:"items"
	Items []*ImageResponse `protobuf:"bytes,2,rep,name=Items,proto3" json:"items"`
}

func (x *ImageListResponse) Reset() {
	*x = ImageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageListResponse) ProtoMessage() {}

func (x *ImageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageListResponse.ProtoReflect.Descriptor instead.
func (*ImageListResponse) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{2}
}

func (x *ImageListResponse) GetPaginate() *general.PaginateInfo {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *ImageListResponse) GetItems() []*ImageResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type ImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"name" validate:"required"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" validate:"required"`
	// @gotags: json:"branch" validate:"required"
	Branch string `protobuf:"bytes,2,opt,name=Branch,proto3" json:"branch" validate:"required"`
	// @gotags: json:"repositories_name" validate:"required"
	RepositoriesName string `protobuf:"bytes,4,opt,name=RepositoriesName,proto3" json:"repositories_name" validate:"required"`
	// @gotags: json:"address"
	Address string `protobuf:"bytes,5,opt,name=Address,proto3" json:"address"`
}

func (x *ImageRequest) Reset() {
	*x = ImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRequest) ProtoMessage() {}

func (x *ImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRequest.ProtoReflect.Descriptor instead.
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{3}
}

func (x *ImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ImageRequest) GetRepositoriesName() string {
	if x != nil {
		return x.RepositoriesName
	}
	return ""
}

func (x *ImageRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ImageCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	GppInfo *general.GppInfo `protobuf:"bytes,1,opt,name=GppInfo,proto3" json:"GppInfo,omitempty" validate:"required"`
	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,2,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: validate:"required"
	Request *ImageRequest `protobuf:"bytes,3,opt,name=Request,proto3" json:"Request,omitempty" validate:"required"`
}

func (x *ImageCreateRequest) Reset() {
	*x = ImageCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCreateRequest) ProtoMessage() {}

func (x *ImageCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCreateRequest.ProtoReflect.Descriptor instead.
func (*ImageCreateRequest) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{4}
}

func (x *ImageCreateRequest) GetGppInfo() *general.GppInfo {
	if x != nil {
		return x.GppInfo
	}
	return nil
}

func (x *ImageCreateRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *ImageCreateRequest) GetRequest() *ImageRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ImageObjectDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: validate:"required"
	RequestID *general.RequestID `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty" validate:"required"`
	// @gotags: json:"branch" validate:"required,oneof=dev test"
	Branch string `protobuf:"bytes,2,opt,name=Branch,proto3" json:"branch" validate:"required,oneof=dev test"`
}

func (x *ImageObjectDeleteRequest) Reset() {
	*x = ImageObjectDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_v1_image_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageObjectDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageObjectDeleteRequest) ProtoMessage() {}

func (x *ImageObjectDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_v1_image_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageObjectDeleteRequest.ProtoReflect.Descriptor instead.
func (*ImageObjectDeleteRequest) Descriptor() ([]byte, []int) {
	return file_artifact_v1_image_proto_rawDescGZIP(), []int{5}
}

func (x *ImageObjectDeleteRequest) GetRequestID() *general.RequestID {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *ImageObjectDeleteRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

var File_artifact_v1_image_proto protoreflect.FileDescriptor

var file_artifact_v1_image_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x1a, 0x21, 0x64, 0x65, 0x76, 0x6f, 0x70, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x65, 0x76, 0x6f, 0x70, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x67, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x64, 0x65, 0x76, 0x6f, 0x70,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae, 0x01, 0x0a,
	0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x47, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x47, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a,
	0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0d, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x93, 0x02,
	0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x54, 0x61, 0x67, 0x22, 0x75, 0x0a, 0x11, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x01,
	0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x47, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x47, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x47, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x18, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x32, 0xe6, 0x01, 0x0a, 0x0c, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x59, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x64, 0x65, 0x76, 0x2f, 0x64, 0x65, 0x76, 0x6f,
	0x70, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x20, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artifact_v1_image_proto_rawDescOnce sync.Once
	file_artifact_v1_image_proto_rawDescData = file_artifact_v1_image_proto_rawDesc
)

func file_artifact_v1_image_proto_rawDescGZIP() []byte {
	file_artifact_v1_image_proto_rawDescOnce.Do(func() {
		file_artifact_v1_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_artifact_v1_image_proto_rawDescData)
	})
	return file_artifact_v1_image_proto_rawDescData
}

var file_artifact_v1_image_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_artifact_v1_image_proto_goTypes = []interface{}{
	(*ImageListRequest)(nil),         // 0: artifact.ImageListRequest
	(*ImageResponse)(nil),            // 1: artifact.ImageResponse
	(*ImageListResponse)(nil),        // 2: artifact.ImageListResponse
	(*ImageRequest)(nil),             // 3: artifact.ImageRequest
	(*ImageCreateRequest)(nil),       // 4: artifact.ImageCreateRequest
	(*ImageObjectDeleteRequest)(nil), // 5: artifact.ImageObjectDeleteRequest
	(*general.GppInfo)(nil),          // 6: general.GppInfo
	(*general.PaginateQuery)(nil),    // 7: general.PaginateQuery
	(*general.RequestID)(nil),        // 8: general.RequestID
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
	(*general.PaginateInfo)(nil),     // 10: general.PaginateInfo
	(*emptypb.Empty)(nil),            // 11: google.protobuf.Empty
}
var file_artifact_v1_image_proto_depIdxs = []int32{
	6,  // 0: artifact.ImageListRequest.GppInfo:type_name -> general.GppInfo
	7,  // 1: artifact.ImageListRequest.PaginateQuery:type_name -> general.PaginateQuery
	8,  // 2: artifact.ImageListRequest.RequestID:type_name -> general.RequestID
	9,  // 3: artifact.ImageResponse.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 4: artifact.ImageResponse.UpdatedAt:type_name -> google.protobuf.Timestamp
	10, // 5: artifact.ImageListResponse.Paginate:type_name -> general.PaginateInfo
	1,  // 6: artifact.ImageListResponse.Items:type_name -> artifact.ImageResponse
	6,  // 7: artifact.ImageCreateRequest.GppInfo:type_name -> general.GppInfo
	8,  // 8: artifact.ImageCreateRequest.RequestID:type_name -> general.RequestID
	3,  // 9: artifact.ImageCreateRequest.Request:type_name -> artifact.ImageRequest
	8,  // 10: artifact.ImageObjectDeleteRequest.RequestID:type_name -> general.RequestID
	0,  // 11: artifact.ImageService.List:input_type -> artifact.ImageListRequest
	4,  // 12: artifact.ImageService.Create:input_type -> artifact.ImageCreateRequest
	5,  // 13: artifact.ImageService.DeleteCollection:input_type -> artifact.ImageObjectDeleteRequest
	2,  // 14: artifact.ImageService.List:output_type -> artifact.ImageListResponse
	1,  // 15: artifact.ImageService.Create:output_type -> artifact.ImageResponse
	11, // 16: artifact.ImageService.DeleteCollection:output_type -> google.protobuf.Empty
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_artifact_v1_image_proto_init() }
func file_artifact_v1_image_proto_init() {
	if File_artifact_v1_image_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artifact_v1_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_v1_image_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_v1_image_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_v1_image_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_v1_image_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_v1_image_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageObjectDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artifact_v1_image_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artifact_v1_image_proto_goTypes,
		DependencyIndexes: file_artifact_v1_image_proto_depIdxs,
		MessageInfos:      file_artifact_v1_image_proto_msgTypes,
	}.Build()
	File_artifact_v1_image_proto = out.File
	file_artifact_v1_image_proto_rawDesc = nil
	file_artifact_v1_image_proto_goTypes = nil
	file_artifact_v1_image_proto_depIdxs = nil
}
